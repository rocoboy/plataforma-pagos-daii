# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Vercel Deploy & Status

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]
    paths:
      - 'apps/web/**'
      - 'apps/api/**'
      - 'apps/types/**'
      - '.github/workflows/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.filter.outputs.web }}
      api: ${{ steps.filter.outputs.api }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            web:
              - 'apps/web/**'
              - 'apps/web/pnpm-lock.yaml'
              - 'apps/types/**'
            api:
              - 'apps/api/**'
              - 'apps/api/bun.lock'
              - 'apps/types/**'

  deploy-web:
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'apps/web/pnpm-lock.yaml'
      
      - name: Install deps (web)
        working-directory: apps/web
        run: pnpm install --frozen-lockfile
      
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
      
      - name: Deploy to Vercel (Web)
        id: deploy
        working-directory: apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WEB_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          echo "🚀 Deploying Web to Vercel..."
          
          # Pull Vercel config
          vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"
          
          # Build
          vercel build --token "$VERCEL_TOKEN"
          
          # Deploy
          URL=$(vercel deploy --prebuilt --token "$VERCEL_TOKEN" --yes | tail -n1)
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          
          echo "✅ Web deployed successfully!"
          echo "🔗 URL: $URL"
      
      - name: Comment PR with Web Deploy
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const commentBody = `🌐 **Vercel Web Deploy**
            
            ✅ **Status**: Deployed Successfully
            🔗 **Preview URL**: ${{ steps.deploy.outputs.url }}
            📊 **Project**: plataforma-pagos-daii-web
            🕒 **Deployed**: ${new Date().toISOString()}
            
            ---
            *Deployed by GitHub Actions*`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });

  deploy-api:
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Bun
        run: npm install -g bun
      
      - name: Install deps (api)
        working-directory: apps/api
        run: bun install --frozen-lockfile
      
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
      
      - name: Deploy to Vercel (API)
        id: deploy
        working-directory: apps/api
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_API_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        run: |
          echo "🚀 Deploying API to Vercel..."
          
          # Pull Vercel config
          vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"
          
          # Build
          vercel build --token "$VERCEL_TOKEN"
          
          # Deploy
          URL=$(vercel deploy --prebuilt --token "$VERCEL_TOKEN" --yes | tail -n1)
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          
          echo "✅ API deployed successfully!"
          echo "🔗 URL: $URL"
      
      - name: Comment PR with API Deploy
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const commentBody = `🚀 **Vercel API Deploy**
            
            ✅ **Status**: Deployed Successfully
            🔗 **Preview URL**: ${{ steps.deploy.outputs.url }}
            📊 **Project**: plataforma-pagos-daii-api
            🕒 **Deployed**: ${new Date().toISOString()}
            
            ---
            *Deployed by GitHub Actions*`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
