name: Deploy to Vercel with Terraform

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  TERRAFORM_VERSION: "1.6.0"

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Terraform Format Check
      run: terraform fmt -check
      working-directory: ./infrastructure/terraform
      continue-on-error: true

    - name: Terraform Init
      run: terraform init
      working-directory: ./infrastructure/terraform
      env:
        VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./infrastructure/terraform

    - name: Terraform Plan
      run: terraform plan -no-color
      working-directory: ./infrastructure/terraform
      env:
        VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
        TF_VAR_api_node_env: ${{ secrets.API_NODE_ENV }}
        TF_VAR_api_environment: ${{ secrets.API_ENVIRONMENT }}
        TF_VAR_web_node_env: ${{ secrets.WEB_NODE_ENV }}
        TF_VAR_web_environment: ${{ secrets.WEB_ENVIRONMENT }}

    - name: Terraform Apply
      if: github.event_name == 'push'
      run: terraform apply -auto-approve
      working-directory: ./infrastructure/terraform
      env:
        VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
        TF_VAR_api_node_env: ${{ secrets.API_NODE_ENV }}
        TF_VAR_api_environment: ${{ secrets.API_ENVIRONMENT }}
        TF_VAR_web_node_env: ${{ secrets.WEB_NODE_ENV }}
        TF_VAR_web_environment: ${{ secrets.WEB_ENVIRONMENT }}
