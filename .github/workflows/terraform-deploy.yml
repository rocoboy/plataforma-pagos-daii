name: Deploy to Vercel with Terraform

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  TERRAFORM_VERSION: "1.6.0"

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Determine Environment
      id: environment
      run: |
        if [[ "${{ github.base_ref }}" == "main" ]] || [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "env_file=production.tfvars" >> $GITHUB_OUTPUT
          echo "environment=production" >> $GITHUB_OUTPUT
        elif [[ "${{ github.base_ref }}" == "develop" ]] || [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          echo "env_file=preview.tfvars" >> $GITHUB_OUTPUT
          echo "environment=preview" >> $GITHUB_OUTPUT
        else
          echo "env_file=development.tfvars" >> $GITHUB_OUTPUT
          echo "environment=development" >> $GITHUB_OUTPUT
        fi
        echo "Using environment: $(cat $GITHUB_OUTPUT | grep environment= | cut -d'=' -f2)"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Terraform Format Check
      run: terraform fmt -check
      working-directory: ./infrastructure/terraform
      continue-on-error: true

    - name: Terraform Init
      run: terraform init
      working-directory: ./infrastructure/terraform
      env:
        TF_VAR_vercel_api_token: ${{ secrets.VERCEL_API_TOKEN }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./infrastructure/terraform
      env:
        TF_VAR_vercel_api_token: ${{ secrets.VERCEL_API_TOKEN }}

    - name: Terraform Plan
      run: terraform plan -var-file="environments/${{ steps.environment.outputs.env_file }}" -no-color
      working-directory: ./infrastructure/terraform
      env:
        TF_VAR_vercel_api_token: ${{ secrets.VERCEL_API_TOKEN }}

    - name: Terraform Apply
      if: github.event_name == 'push'
      run: terraform apply -var-file="environments/${{ steps.environment.outputs.env_file }}" -auto-approve
      working-directory: ./infrastructure/terraform
      env:
        TF_VAR_vercel_api_token: ${{ secrets.VERCEL_API_TOKEN }}
