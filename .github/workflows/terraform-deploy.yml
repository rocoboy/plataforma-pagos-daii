name: Deploy to Vercel with Terraform

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  # Variables pÃºblicas (no sensibles)
  PROJECT_NAME: "plataforma-pagos-daii"
  TERRAFORM_VERSION: "1.6.0"

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
      branch: ${{ steps.env.outputs.branch }}
    steps:
      - name: Determine environment
        id: env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "branch=main" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "environment=preview" >> $GITHUB_OUTPUT
            echo "branch=develop" >> $GITHUB_OUTPUT
          else
            echo "environment=development" >> $GITHUB_OUTPUT
            echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

  terraform:
    runs-on: ubuntu-latest
    needs: determine-environment
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Terraform Format Check
      run: terraform fmt -check
      working-directory: ./infrastructure/terraform

    - name: Terraform Init
      run: terraform init
      working-directory: ./infrastructure/terraform
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./infrastructure/terraform

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Terraform Plan
      run: |
        terraform plan \
          -var="vercel_team_id=${{ secrets.VERCEL_TEAM_ID }}" \
          -var="project_name=${{ env.PROJECT_NAME }}" \
          -var="environment=${{ needs.determine-environment.outputs.environment }}" \
          -var="branch=${{ needs.determine-environment.outputs.branch }}"
      working-directory: ./infrastructure/terraform
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    - name: Terraform Apply
      if: github.event_name == 'push'
      run: |
        terraform apply -auto-approve \
          -var="vercel_team_id=${{ secrets.VERCEL_TEAM_ID }}" \
          -var="project_name=${{ env.PROJECT_NAME }}" \
          -var="environment=${{ needs.determine-environment.outputs.environment }}" \
          -var="branch=${{ needs.determine-environment.outputs.branch }}"
      working-directory: ./infrastructure/terraform
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
