name: Terraform Apply

on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/terraform/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infrastructure/terraform/**'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure/terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        env:
          VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        env:
          VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
          TF_VAR_api_node_env: ${{ secrets.API_NODE_ENV }}
          TF_VAR_api_environment: ${{ secrets.API_ENVIRONMENT }}
          TF_VAR_web_node_env: ${{ secrets.WEB_NODE_ENV }}
          TF_VAR_web_environment: ${{ secrets.WEB_ENVIRONMENT }}
        run: terraform plan -no-color
        continue-on-error: false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
          TF_VAR_api_node_env: ${{ secrets.API_NODE_ENV }}
          TF_VAR_api_environment: ${{ secrets.API_ENVIRONMENT }}
          TF_VAR_web_node_env: ${{ secrets.WEB_NODE_ENV }}
          TF_VAR_web_environment: ${{ secrets.WEB_ENVIRONMENT }}
        run: terraform apply -auto-approve

