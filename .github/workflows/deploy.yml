# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy to Vercel

on:
  push:
    branches: [develop, main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.filter.outputs.web }}
      api: ${{ steps.filter.outputs.api }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            web:
              - 'apps/web/**'
              - 'packages/**'
              - 'apps/web/pnpm-lock.yaml'
            api:
              - 'apps/api/**'
              - 'packages/**'
              - 'apps/api/pnpm-lock.yaml'

  deploy-web:
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    concurrency: { group: 'deploy-web', cancel-in-progress: true }
    steps:
      - uses: actions/checkout@v4

      # pnpm (web)
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: apps/web/pnpm-lock.yaml
      - name: Install deps (web)
        working-directory: apps/web
        run: pnpm install --frozen-lockfile

      - name: Vercel pull (preview/prod)
        working-directory: apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WEB_PROJECT_ID }}
        run: |
          rm -rf .vercel
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel pull --yes --environment=production --token $VERCEL_TOKEN
          else
            npx vercel pull --yes --environment=preview --token $VERCEL_TOKEN
          fi

      - name: Build (vercel)
        working-directory: apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WEB_PROJECT_ID }}
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel build --prod --token $VERCEL_TOKEN
          else
            npx vercel build --token $VERCEL_TOKEN
          fi

      - name: Deploy (vercel)
        working-directory: apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WEB_PROJECT_ID }}
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel deploy --prebuilt --prod --token $VERCEL_TOKEN
          else
            npx vercel deploy --prebuilt --token $VERCEL_TOKEN
          fi

  deploy-api:
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    concurrency: { group: 'deploy-api', cancel-in-progress: true }
    steps:
      - uses: actions/checkout@v4

      # pnpm (api)
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: apps/api/pnpm-lock.yaml
      - name: Install deps (api)
        working-directory: apps/api
        run: pnpm install --frozen-lockfile

      - name: Vercel pull (preview/prod)
        working-directory: apps/api
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_API_PROJECT_ID }}
        run: |
          rm -rf .vercel
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel pull --yes --environment=production --token $VERCEL_TOKEN
          else
            npx vercel pull --yes --environment=preview --token $VERCEL_TOKEN
          fi

      - name: Build (vercel)
        working-directory: apps/api
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_API_PROJECT_ID }}
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel build --prod --token $VERCEL_TOKEN
          else
            npx vercel build --token $VERCEL_TOKEN
          fi

      - name: Deploy (vercel)
        working-directory: apps/api
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_API_PROJECT_ID }}
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel deploy --prebuilt --prod --token $VERCEL_TOKEN
          else
            npx vercel deploy --prebuilt --token $VERCEL_TOKEN
          fi
