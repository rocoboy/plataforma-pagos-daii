name: CI Build (no deploy)
on:
  pull_request:
    branches: [develop, main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.filter.outputs.web }}
      api: ${{ steps.filter.outputs.api }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            web: ['apps/web/**','packages/**']
            api: ['apps/api/**','packages/**']

  build-web:
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: apps/web } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci
      - name: Pull env (preview)            # para PR usamos env de Preview
        run: npx vercel pull --yes --environment=preview \
              --token ${{ secrets.VERCEL_TOKEN }} \
              --project ${{ secrets.VERCEL_WEB_PROJECT_ID }}
      - name: Build (dry-run)
        run: npx vercel build --token ${{ secrets.VERCEL_TOKEN }}

  build-api:
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: apps/api } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci
      - name: Pull env (preview)
        run: npx vercel pull --yes --environment=preview \
              --token ${{ secrets.VERCEL_TOKEN }} \
              --project ${{ secrets.VERCEL_API_PROJECT_ID }}
      - name: Build (dry-run)
        run: npx vercel build --token ${{ secrets.VERCEL_TOKEN }}
