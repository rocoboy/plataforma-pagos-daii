# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy to Vercel

on:
  push:
    branches: [develop, main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.filter.outputs.web }}
      api: ${{ steps.filter.outputs.api }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            web:
              - 'apps/web/**'
              - 'packages/**'
            api:
              - 'apps/api/**'
              - 'packages/**'

  deploy-web:
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    concurrency: { group: 'deploy-web', cancel-in-progress: true }
    defaults: { run: { working-directory: apps/web } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci

      - name: Export Vercel token
        run: echo "VERCEL_TOKEN=${{ secrets.VERCEL_TOKEN }}" >> $GITHUB_ENV

      # Usa el .vercel/project.json del directorio para resolver el proyecto
      - name: Vercel pull (preview/prod)
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel pull --yes --environment=production --token "$VERCEL_TOKEN"
          else
            npx vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"
          fi

      - name: Build
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel build --prod --token "$VERCEL_TOKEN"
          else
            npx vercel build --token "$VERCEL_TOKEN"
          fi

      - name: Deploy
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN"
          else
            npx vercel deploy --prebuilt --token "$VERCEL_TOKEN"
          fi

  deploy-api:
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    concurrency: { group: 'deploy-api', cancel-in-progress: true }
    defaults: { run: { working-directory: apps/api } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci

      - name: Export Vercel token
        run: echo "VERCEL_TOKEN=${{ secrets.VERCEL_TOKEN }}" >> $GITHUB_ENV

      - name: Vercel pull (preview/prod)
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel pull --yes --environment=production --token "$VERCEL_TOKEN"
          else
            npx vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"
          fi

      - name: Build
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel build --prod --token "$VERCEL_TOKEN"
          else
            npx vercel build --token "$VERCEL_TOKEN"
          fi

      - name: Deploy
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN"
          else
            npx vercel deploy --prebuilt --token "$VERCEL_TOKEN"
          fi
