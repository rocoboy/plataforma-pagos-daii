# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy to Vercel

on:
  push:
    branches: [develop, main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.filter.outputs.web }}
      api: ${{ steps.filter.outputs.api }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            web:
              - 'apps/web/**'
              - 'packages/**'
              - 'apps/web/pnpm-lock.yaml'
            api:
              - 'apps/api/**'
              - 'packages/**'
              - 'apps/api/pnpm-lock.yaml'

  deploy-web:
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    concurrency: { group: 'deploy-web', cancel-in-progress: true }
    outputs:
      url: ${{ steps.vercel-deploy-web.outputs.url }}
    steps:
      - uses: actions/checkout@v4

      # pnpm (web)
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: apps/web/pnpm-lock.yaml

      - name: Install deps (web)
        working-directory: apps/web
        run: pnpm install --frozen-lockfile

      - name: Vercel pull (preview/prod)
        working-directory: apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WEB_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          rm -rf .vercel
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel pull --yes --environment=production --token "$VERCEL_TOKEN"
          else
            npx vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"
          fi

      - name: Build (vercel)
        working-directory: apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WEB_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel build --prod --token "$VERCEL_TOKEN"
          else
            npx vercel build --token "$VERCEL_TOKEN"
          fi
        shell: bash

      - name: Deploy (vercel)
        id: vercel-deploy-web
        working-directory: apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WEB_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            URL=$(npx vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN" --confirm --no-clipboard | tail -n1)
          else
            URL=$(npx vercel deploy --prebuilt --token "$VERCEL_TOKEN" --confirm --no-clipboard | tail -n1)
          fi

          echo "Web app deployed to: $URL"
          echo "VERCEL_WEB_URL=$URL" >> "$GITHUB_ENV"
          echo "url=$URL" >> "$GITHUB_OUTPUT"

  deploy-api:
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    concurrency: { group: 'deploy-api', cancel-in-progress: true }
    outputs:
      url: ${{ steps.vercel-deploy-api.outputs.url }}
    steps:
      - uses: actions/checkout@v4

      # pnpm (api)
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: apps/api/pnpm-lock.yaml

      - name: Install deps (api)
        working-directory: apps/api
        run: pnpm install --frozen-lockfile

      - name: Vercel pull (preview/prod)
        working-directory: apps/api
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_API_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          rm -rf .vercel
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel pull --yes --environment=production --token "$VERCEL_TOKEN"
          else
            npx vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"
          fi

      - name: Build (vercel)
        working-directory: apps/api
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_API_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            npx vercel build --prod --token "$VERCEL_TOKEN"
          else
            npx vercel build --token "$VERCEL_TOKEN"
          fi
        shell: bash

      - name: Deploy (vercel)
        id: vercel-deploy-api
        working-directory: apps/api
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_API_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            URL=$(npx vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN" --confirm --no-clipboard | tail -n1)
          else
            URL=$(npx vercel deploy --prebuilt --token "$VERCEL_TOKEN" --confirm --no-clipboard | tail -n1)
          fi

          echo "API deployed to: $URL"
          echo "VERCEL_API_URL=$URL" >> "$GITHUB_ENV"
          echo "url=$URL" >> "$GITHUB_OUTPUT"

  post:
    name: Summary
    runs-on: ubuntu-latest
    needs: [changes, deploy-web, deploy-api]
    if: ${{ always() }} # Mostramos resumen incluso si solo deployÃ³ uno
    steps:
      - name: Write summary
        run: |
          echo "## Deploy Summary" >> "$GITHUB_STEP_SUMMARY"
          if [ "${{ needs.changes.outputs.web }}" = "true" ]; then
            echo "- **Web**: ${{ needs.deploy-web.outputs.url }}" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "- **Web**: _no hubo cambios_" >> "$GITHUB_STEP_SUMMARY"
          fi

          if [ "${{ needs.changes.outputs.api }}" = "true" ]; then
            echo "- **API**: ${{ needs.deploy-api.outputs.url }}" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "- **API**: _no hubo cambios_" >> "$GITHUB_STEP_SUMMARY"
          fi
