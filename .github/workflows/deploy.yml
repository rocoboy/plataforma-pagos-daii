name: Deploy to Vercel

on:
  push:
    branches: [develop, main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.filter.outputs.web }}
      api: ${{ steps.filter.outputs.api }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            web:
              - 'apps/web/**'
              - 'packages/**'
            api:
              - 'apps/api/**'
              - 'packages/**'

  deploy-web:
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci

      # Trae config/vars desde Vercel (Preview o Production seg√∫n la rama)
      - name: Vercel pull env
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            npx vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          else
            npx vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          fi

      - name: Build
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            npx vercel build --prod --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          else
            npx vercel build --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          fi

      - name: Deploy
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            npx vercel deploy --prebuilt --prod \
              --project ${{ secrets.VERCEL_WEB_PROJECT_ID }} \
              --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          else
            npx vercel deploy --prebuilt \
              --project ${{ secrets.VERCEL_WEB_PROJECT_ID }} \
              --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          fi

  deploy-api:
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci

      - name: Vercel pull env
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            npx vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          else
            npx vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          fi

      - name: Build
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            npx vercel build --prod --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          else
            npx vercel build --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          fi

      - name: Deploy
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            npx vercel deploy --prebuilt --prod \
              --project ${{ secrets.VERCEL_API_PROJECT_ID }} \
              --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          else
            npx vercel deploy --prebuilt \
              --project ${{ secrets.VERCEL_API_PROJECT_ID }} \
              --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          fi
