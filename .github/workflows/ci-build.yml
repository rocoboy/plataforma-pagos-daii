# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI Build (no deploy)

on:
  pull_request:
    branches: [develop, main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.filter.outputs.web }}
      api: ${{ steps.filter.outputs.api }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            web:
              - 'apps/web/**'
              - 'packages/**'
              - 'apps/web/pnpm-lock.yaml'
            api:
              - 'apps/api/**'
              - 'packages/**'
              - 'apps/api/pnpm-lock.yaml'

  build-web:
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # pnpm (web)
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: apps/web/pnpm-lock.yaml
      - name: Install deps (web)
        working-directory: apps/web
        run: pnpm install --frozen-lockfile

      # Sólo para PRs del mismo repo: usar vercel pull/build (requiere secrets)
      - name: Export Vercel envs (web)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        run: |
          echo "VERCEL_TOKEN=${{ secrets.VERCEL_TOKEN }}" >> $GITHUB_ENV
          echo "VERCEL_ORG_ID=${{ secrets.VERCEL_ORG_ID }}" >> $GITHUB_ENV
          echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_WEB_PROJECT_ID }}" >> $GITHUB_ENV

      - name: Ensure no .vercel dir (web)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        working-directory: apps/web
        run: rm -rf .vercel

      - name: Vercel pull (preview)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        working-directory: apps/web
        env:
          VERCEL_TOKEN: ${{ env.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ env.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ env.VERCEL_PROJECT_ID }}
        run: npx vercel pull --yes --environment=preview

      - name: Build (vercel)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        working-directory: apps/web
        env:
          VERCEL_TOKEN: ${{ env.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ env.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ env.VERCEL_PROJECT_ID }}
        run: npx vercel build

      # PR desde fork → build “seco” sin secrets
      - name: Build (fallback sin secrets)
        if: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
        working-directory: apps/web
        run: pnpm run build

  build-api:
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # pnpm (api)
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: apps/api/pnpm-lock.yaml
      - name: Install deps (api)
        working-directory: apps/api
        run: pnpm install --frozen-lockfile

      - name: Export Vercel envs (api)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        run: |
          echo "VERCEL_TOKEN=${{ secrets.VERCEL_TOKEN }}" >> $GITHUB_ENV
          echo "VERCEL_ORG_ID=${{ secrets.VERCEL_ORG_ID }}" >> $GITHUB_ENV
          echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_API_PROJECT_ID }}" >> $GITHUB_ENV

      - name: Ensure no .vercel dir (api)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        working-directory: apps/api
        run: rm -rf .vercel

      - name: Vercel pull (preview)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        working-directory: apps/api
        env:
          VERCEL_TOKEN: ${{ env.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ env.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ env.VERCEL_PROJECT_ID }}
        run: npx vercel pull --yes --environment=preview

      - name: Build (vercel)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        working-directory: apps/api
        env:
          VERCEL_TOKEN: ${{ env.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ env.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ env.VERCEL_PROJECT_ID }}
        run: npx vercel build

      - name: Build (fallback sin secrets)
        if: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
        working-directory: apps/api
        run: pnpm run build
